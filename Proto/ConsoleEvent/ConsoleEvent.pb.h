// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ConsoleEvent.proto

#ifndef PROTOBUF_ConsoleEvent_2eproto__INCLUDED
#define PROTOBUF_ConsoleEvent_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Proto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ConsoleEvent_2eproto();
void protobuf_AssignDesc_ConsoleEvent_2eproto();
void protobuf_ShutdownFile_ConsoleEvent_2eproto();

class ConsoleSignal;
class ConsoleEvent;

// ===================================================================

class ConsoleSignal : public ::google::protobuf::Message {
 public:
  ConsoleSignal();
  virtual ~ConsoleSignal();

  ConsoleSignal(const ConsoleSignal& from);

  inline ConsoleSignal& operator=(const ConsoleSignal& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConsoleSignal& default_instance();

  void Swap(ConsoleSignal* other);

  // implements Message ----------------------------------------------

  ConsoleSignal* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConsoleSignal& from);
  void MergeFrom(const ConsoleSignal& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string signal = 1;
  inline bool has_signal() const;
  inline void clear_signal();
  static const int kSignalFieldNumber = 1;
  inline const ::std::string& signal() const;
  inline void set_signal(const ::std::string& value);
  inline void set_signal(const char* value);
  inline void set_signal(const char* value, size_t size);
  inline ::std::string* mutable_signal();
  inline ::std::string* release_signal();
  inline void set_allocated_signal(::std::string* signal);

  // optional double value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline double value() const;
  inline void set_value(double value);

  // @@protoc_insertion_point(class_scope:Proto.ConsoleSignal)
 private:
  inline void set_has_signal();
  inline void clear_has_signal();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* signal_;
  double value_;
  friend void  protobuf_AddDesc_ConsoleEvent_2eproto();
  friend void protobuf_AssignDesc_ConsoleEvent_2eproto();
  friend void protobuf_ShutdownFile_ConsoleEvent_2eproto();

  void InitAsDefaultInstance();
  static ConsoleSignal* default_instance_;
};
// -------------------------------------------------------------------

class ConsoleEvent : public ::google::protobuf::Message {
 public:
  ConsoleEvent();
  virtual ~ConsoleEvent();

  ConsoleEvent(const ConsoleEvent& from);

  inline ConsoleEvent& operator=(const ConsoleEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConsoleEvent& default_instance();

  void Swap(ConsoleEvent* other);

  // implements Message ----------------------------------------------

  ConsoleEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConsoleEvent& from);
  void MergeFrom(const ConsoleEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Proto.ConsoleSignal event = 1;
  inline int event_size() const;
  inline void clear_event();
  static const int kEventFieldNumber = 1;
  inline const ::Proto::ConsoleSignal& event(int index) const;
  inline ::Proto::ConsoleSignal* mutable_event(int index);
  inline ::Proto::ConsoleSignal* add_event();
  inline const ::google::protobuf::RepeatedPtrField< ::Proto::ConsoleSignal >&
      event() const;
  inline ::google::protobuf::RepeatedPtrField< ::Proto::ConsoleSignal >*
      mutable_event();

  // @@protoc_insertion_point(class_scope:Proto.ConsoleEvent)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Proto::ConsoleSignal > event_;
  friend void  protobuf_AddDesc_ConsoleEvent_2eproto();
  friend void protobuf_AssignDesc_ConsoleEvent_2eproto();
  friend void protobuf_ShutdownFile_ConsoleEvent_2eproto();

  void InitAsDefaultInstance();
  static ConsoleEvent* default_instance_;
};
// ===================================================================


// ===================================================================

// ConsoleSignal

// required string signal = 1;
inline bool ConsoleSignal::has_signal() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConsoleSignal::set_has_signal() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConsoleSignal::clear_has_signal() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConsoleSignal::clear_signal() {
  if (signal_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    signal_->clear();
  }
  clear_has_signal();
}
inline const ::std::string& ConsoleSignal::signal() const {
  // @@protoc_insertion_point(field_get:Proto.ConsoleSignal.signal)
  return *signal_;
}
inline void ConsoleSignal::set_signal(const ::std::string& value) {
  set_has_signal();
  if (signal_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    signal_ = new ::std::string;
  }
  signal_->assign(value);
  // @@protoc_insertion_point(field_set:Proto.ConsoleSignal.signal)
}
inline void ConsoleSignal::set_signal(const char* value) {
  set_has_signal();
  if (signal_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    signal_ = new ::std::string;
  }
  signal_->assign(value);
  // @@protoc_insertion_point(field_set_char:Proto.ConsoleSignal.signal)
}
inline void ConsoleSignal::set_signal(const char* value, size_t size) {
  set_has_signal();
  if (signal_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    signal_ = new ::std::string;
  }
  signal_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Proto.ConsoleSignal.signal)
}
inline ::std::string* ConsoleSignal::mutable_signal() {
  set_has_signal();
  if (signal_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    signal_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Proto.ConsoleSignal.signal)
  return signal_;
}
inline ::std::string* ConsoleSignal::release_signal() {
  clear_has_signal();
  if (signal_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = signal_;
    signal_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ConsoleSignal::set_allocated_signal(::std::string* signal) {
  if (signal_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete signal_;
  }
  if (signal) {
    set_has_signal();
    signal_ = signal;
  } else {
    clear_has_signal();
    signal_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Proto.ConsoleSignal.signal)
}

// optional double value = 2;
inline bool ConsoleSignal::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConsoleSignal::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConsoleSignal::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConsoleSignal::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline double ConsoleSignal::value() const {
  // @@protoc_insertion_point(field_get:Proto.ConsoleSignal.value)
  return value_;
}
inline void ConsoleSignal::set_value(double value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:Proto.ConsoleSignal.value)
}

// -------------------------------------------------------------------

// ConsoleEvent

// repeated .Proto.ConsoleSignal event = 1;
inline int ConsoleEvent::event_size() const {
  return event_.size();
}
inline void ConsoleEvent::clear_event() {
  event_.Clear();
}
inline const ::Proto::ConsoleSignal& ConsoleEvent::event(int index) const {
  // @@protoc_insertion_point(field_get:Proto.ConsoleEvent.event)
  return event_.Get(index);
}
inline ::Proto::ConsoleSignal* ConsoleEvent::mutable_event(int index) {
  // @@protoc_insertion_point(field_mutable:Proto.ConsoleEvent.event)
  return event_.Mutable(index);
}
inline ::Proto::ConsoleSignal* ConsoleEvent::add_event() {
  // @@protoc_insertion_point(field_add:Proto.ConsoleEvent.event)
  return event_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Proto::ConsoleSignal >&
ConsoleEvent::event() const {
  // @@protoc_insertion_point(field_list:Proto.ConsoleEvent.event)
  return event_;
}
inline ::google::protobuf::RepeatedPtrField< ::Proto::ConsoleSignal >*
ConsoleEvent::mutable_event() {
  // @@protoc_insertion_point(field_mutable_list:Proto.ConsoleEvent.event)
  return &event_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Proto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ConsoleEvent_2eproto__INCLUDED
