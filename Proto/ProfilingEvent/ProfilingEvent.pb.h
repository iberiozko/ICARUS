// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProfilingEvent.proto

#ifndef PROTOBUF_ProfilingEvent_2eproto__INCLUDED
#define PROTOBUF_ProfilingEvent_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Proto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProfilingEvent_2eproto();
void protobuf_AssignDesc_ProfilingEvent_2eproto();
void protobuf_ShutdownFile_ProfilingEvent_2eproto();

class ProfilingShortItem;
class ProfilingShortEvent;

// ===================================================================

class ProfilingShortItem : public ::google::protobuf::Message {
 public:
  ProfilingShortItem();
  virtual ~ProfilingShortItem();

  ProfilingShortItem(const ProfilingShortItem& from);

  inline ProfilingShortItem& operator=(const ProfilingShortItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProfilingShortItem& default_instance();

  void Swap(ProfilingShortItem* other);

  // implements Message ----------------------------------------------

  ProfilingShortItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProfilingShortItem& from);
  void MergeFrom(const ProfilingShortItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const char* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  inline void set_allocated_key(::std::string* key);

  // required double shortValue = 2;
  inline bool has_shortvalue() const;
  inline void clear_shortvalue();
  static const int kShortValueFieldNumber = 2;
  inline double shortvalue() const;
  inline void set_shortvalue(double value);

  // required double shortAverage = 3;
  inline bool has_shortaverage() const;
  inline void clear_shortaverage();
  static const int kShortAverageFieldNumber = 3;
  inline double shortaverage() const;
  inline void set_shortaverage(double value);

  // @@protoc_insertion_point(class_scope:Proto.ProfilingShortItem)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_shortvalue();
  inline void clear_has_shortvalue();
  inline void set_has_shortaverage();
  inline void clear_has_shortaverage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* key_;
  double shortvalue_;
  double shortaverage_;
  friend void  protobuf_AddDesc_ProfilingEvent_2eproto();
  friend void protobuf_AssignDesc_ProfilingEvent_2eproto();
  friend void protobuf_ShutdownFile_ProfilingEvent_2eproto();

  void InitAsDefaultInstance();
  static ProfilingShortItem* default_instance_;
};
// -------------------------------------------------------------------

class ProfilingShortEvent : public ::google::protobuf::Message {
 public:
  ProfilingShortEvent();
  virtual ~ProfilingShortEvent();

  ProfilingShortEvent(const ProfilingShortEvent& from);

  inline ProfilingShortEvent& operator=(const ProfilingShortEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProfilingShortEvent& default_instance();

  void Swap(ProfilingShortEvent* other);

  // implements Message ----------------------------------------------

  ProfilingShortEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProfilingShortEvent& from);
  void MergeFrom(const ProfilingShortEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // repeated .Proto.ProfilingShortItem items = 2;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 2;
  inline const ::Proto::ProfilingShortItem& items(int index) const;
  inline ::Proto::ProfilingShortItem* mutable_items(int index);
  inline ::Proto::ProfilingShortItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::Proto::ProfilingShortItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::Proto::ProfilingShortItem >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:Proto.ProfilingShortEvent)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::RepeatedPtrField< ::Proto::ProfilingShortItem > items_;
  friend void  protobuf_AddDesc_ProfilingEvent_2eproto();
  friend void protobuf_AssignDesc_ProfilingEvent_2eproto();
  friend void protobuf_ShutdownFile_ProfilingEvent_2eproto();

  void InitAsDefaultInstance();
  static ProfilingShortEvent* default_instance_;
};
// ===================================================================


// ===================================================================

// ProfilingShortItem

// required string key = 1;
inline bool ProfilingShortItem::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProfilingShortItem::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProfilingShortItem::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProfilingShortItem::clear_key() {
  if (key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& ProfilingShortItem::key() const {
  // @@protoc_insertion_point(field_get:Proto.ProfilingShortItem.key)
  return *key_;
}
inline void ProfilingShortItem::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(value);
  // @@protoc_insertion_point(field_set:Proto.ProfilingShortItem.key)
}
inline void ProfilingShortItem::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(value);
  // @@protoc_insertion_point(field_set_char:Proto.ProfilingShortItem.key)
}
inline void ProfilingShortItem::set_key(const char* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Proto.ProfilingShortItem.key)
}
inline ::std::string* ProfilingShortItem::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Proto.ProfilingShortItem.key)
  return key_;
}
inline ::std::string* ProfilingShortItem::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ProfilingShortItem::set_allocated_key(::std::string* key) {
  if (key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete key_;
  }
  if (key) {
    set_has_key();
    key_ = key;
  } else {
    clear_has_key();
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Proto.ProfilingShortItem.key)
}

// required double shortValue = 2;
inline bool ProfilingShortItem::has_shortvalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProfilingShortItem::set_has_shortvalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProfilingShortItem::clear_has_shortvalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProfilingShortItem::clear_shortvalue() {
  shortvalue_ = 0;
  clear_has_shortvalue();
}
inline double ProfilingShortItem::shortvalue() const {
  // @@protoc_insertion_point(field_get:Proto.ProfilingShortItem.shortValue)
  return shortvalue_;
}
inline void ProfilingShortItem::set_shortvalue(double value) {
  set_has_shortvalue();
  shortvalue_ = value;
  // @@protoc_insertion_point(field_set:Proto.ProfilingShortItem.shortValue)
}

// required double shortAverage = 3;
inline bool ProfilingShortItem::has_shortaverage() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProfilingShortItem::set_has_shortaverage() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProfilingShortItem::clear_has_shortaverage() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProfilingShortItem::clear_shortaverage() {
  shortaverage_ = 0;
  clear_has_shortaverage();
}
inline double ProfilingShortItem::shortaverage() const {
  // @@protoc_insertion_point(field_get:Proto.ProfilingShortItem.shortAverage)
  return shortaverage_;
}
inline void ProfilingShortItem::set_shortaverage(double value) {
  set_has_shortaverage();
  shortaverage_ = value;
  // @@protoc_insertion_point(field_set:Proto.ProfilingShortItem.shortAverage)
}

// -------------------------------------------------------------------

// ProfilingShortEvent

// required string name = 1;
inline bool ProfilingShortEvent::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProfilingShortEvent::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProfilingShortEvent::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProfilingShortEvent::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ProfilingShortEvent::name() const {
  // @@protoc_insertion_point(field_get:Proto.ProfilingShortEvent.name)
  return *name_;
}
inline void ProfilingShortEvent::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Proto.ProfilingShortEvent.name)
}
inline void ProfilingShortEvent::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Proto.ProfilingShortEvent.name)
}
inline void ProfilingShortEvent::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Proto.ProfilingShortEvent.name)
}
inline ::std::string* ProfilingShortEvent::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Proto.ProfilingShortEvent.name)
  return name_;
}
inline ::std::string* ProfilingShortEvent::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ProfilingShortEvent::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Proto.ProfilingShortEvent.name)
}

// repeated .Proto.ProfilingShortItem items = 2;
inline int ProfilingShortEvent::items_size() const {
  return items_.size();
}
inline void ProfilingShortEvent::clear_items() {
  items_.Clear();
}
inline const ::Proto::ProfilingShortItem& ProfilingShortEvent::items(int index) const {
  // @@protoc_insertion_point(field_get:Proto.ProfilingShortEvent.items)
  return items_.Get(index);
}
inline ::Proto::ProfilingShortItem* ProfilingShortEvent::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:Proto.ProfilingShortEvent.items)
  return items_.Mutable(index);
}
inline ::Proto::ProfilingShortItem* ProfilingShortEvent::add_items() {
  // @@protoc_insertion_point(field_add:Proto.ProfilingShortEvent.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Proto::ProfilingShortItem >&
ProfilingShortEvent::items() const {
  // @@protoc_insertion_point(field_list:Proto.ProfilingShortEvent.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::Proto::ProfilingShortItem >*
ProfilingShortEvent::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:Proto.ProfilingShortEvent.items)
  return &items_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Proto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProfilingEvent_2eproto__INCLUDED
