// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProfilingEvent.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProfilingEvent.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Proto {

namespace {

const ::google::protobuf::Descriptor* ProfilingShortItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProfilingShortItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProfilingShortEvent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProfilingShortEvent_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProfilingEvent_2eproto() {
  protobuf_AddDesc_ProfilingEvent_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProfilingEvent.proto");
  GOOGLE_CHECK(file != NULL);
  ProfilingShortItem_descriptor_ = file->message_type(0);
  static const int ProfilingShortItem_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfilingShortItem, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfilingShortItem, shortvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfilingShortItem, shortaverage_),
  };
  ProfilingShortItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProfilingShortItem_descriptor_,
      ProfilingShortItem::default_instance_,
      ProfilingShortItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfilingShortItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfilingShortItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProfilingShortItem));
  ProfilingShortEvent_descriptor_ = file->message_type(1);
  static const int ProfilingShortEvent_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfilingShortEvent, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfilingShortEvent, items_),
  };
  ProfilingShortEvent_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProfilingShortEvent_descriptor_,
      ProfilingShortEvent::default_instance_,
      ProfilingShortEvent_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfilingShortEvent, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfilingShortEvent, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProfilingShortEvent));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProfilingEvent_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProfilingShortItem_descriptor_, &ProfilingShortItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProfilingShortEvent_descriptor_, &ProfilingShortEvent::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProfilingEvent_2eproto() {
  delete ProfilingShortItem::default_instance_;
  delete ProfilingShortItem_reflection_;
  delete ProfilingShortEvent::default_instance_;
  delete ProfilingShortEvent_reflection_;
}

void protobuf_AddDesc_ProfilingEvent_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024ProfilingEvent.proto\022\005Proto\"K\n\022Profili"
    "ngShortItem\022\013\n\003key\030\001 \002(\t\022\022\n\nshortValue\030\002"
    " \002(\001\022\024\n\014shortAverage\030\003 \002(\001\"M\n\023ProfilingS"
    "hortEvent\022\014\n\004name\030\001 \002(\t\022(\n\005items\030\002 \003(\0132\031"
    ".Proto.ProfilingShortItem", 185);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProfilingEvent.proto", &protobuf_RegisterTypes);
  ProfilingShortItem::default_instance_ = new ProfilingShortItem();
  ProfilingShortEvent::default_instance_ = new ProfilingShortEvent();
  ProfilingShortItem::default_instance_->InitAsDefaultInstance();
  ProfilingShortEvent::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProfilingEvent_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProfilingEvent_2eproto {
  StaticDescriptorInitializer_ProfilingEvent_2eproto() {
    protobuf_AddDesc_ProfilingEvent_2eproto();
  }
} static_descriptor_initializer_ProfilingEvent_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int ProfilingShortItem::kKeyFieldNumber;
const int ProfilingShortItem::kShortValueFieldNumber;
const int ProfilingShortItem::kShortAverageFieldNumber;
#endif  // !_MSC_VER

ProfilingShortItem::ProfilingShortItem()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Proto.ProfilingShortItem)
}

void ProfilingShortItem::InitAsDefaultInstance() {
}

ProfilingShortItem::ProfilingShortItem(const ProfilingShortItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Proto.ProfilingShortItem)
}

void ProfilingShortItem::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shortvalue_ = 0;
  shortaverage_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProfilingShortItem::~ProfilingShortItem() {
  // @@protoc_insertion_point(destructor:Proto.ProfilingShortItem)
  SharedDtor();
}

void ProfilingShortItem::SharedDtor() {
  if (key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete key_;
  }
  if (this != default_instance_) {
  }
}

void ProfilingShortItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProfilingShortItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProfilingShortItem_descriptor_;
}

const ProfilingShortItem& ProfilingShortItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProfilingEvent_2eproto();
  return *default_instance_;
}

ProfilingShortItem* ProfilingShortItem::default_instance_ = NULL;

ProfilingShortItem* ProfilingShortItem::New() const {
  return new ProfilingShortItem;
}

void ProfilingShortItem::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ProfilingShortItem*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(shortvalue_, shortaverage_);
    if (has_key()) {
      if (key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        key_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProfilingShortItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Proto.ProfilingShortItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "key");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_shortValue;
        break;
      }

      // required double shortValue = 2;
      case 2: {
        if (tag == 17) {
         parse_shortValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &shortvalue_)));
          set_has_shortvalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_shortAverage;
        break;
      }

      // required double shortAverage = 3;
      case 3: {
        if (tag == 25) {
         parse_shortAverage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &shortaverage_)));
          set_has_shortaverage();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Proto.ProfilingShortItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Proto.ProfilingShortItem)
  return false;
#undef DO_
}

void ProfilingShortItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Proto.ProfilingShortItem)
  // required string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // required double shortValue = 2;
  if (has_shortvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->shortvalue(), output);
  }

  // required double shortAverage = 3;
  if (has_shortaverage()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->shortaverage(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Proto.ProfilingShortItem)
}

::google::protobuf::uint8* ProfilingShortItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Proto.ProfilingShortItem)
  // required string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // required double shortValue = 2;
  if (has_shortvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->shortvalue(), target);
  }

  // required double shortAverage = 3;
  if (has_shortaverage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->shortaverage(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Proto.ProfilingShortItem)
  return target;
}

int ProfilingShortItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string key = 1;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }

    // required double shortValue = 2;
    if (has_shortvalue()) {
      total_size += 1 + 8;
    }

    // required double shortAverage = 3;
    if (has_shortaverage()) {
      total_size += 1 + 8;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProfilingShortItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProfilingShortItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProfilingShortItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProfilingShortItem::MergeFrom(const ProfilingShortItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_key()) {
      set_key(from.key());
    }
    if (from.has_shortvalue()) {
      set_shortvalue(from.shortvalue());
    }
    if (from.has_shortaverage()) {
      set_shortaverage(from.shortaverage());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProfilingShortItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProfilingShortItem::CopyFrom(const ProfilingShortItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProfilingShortItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void ProfilingShortItem::Swap(ProfilingShortItem* other) {
  if (other != this) {
    std::swap(key_, other->key_);
    std::swap(shortvalue_, other->shortvalue_);
    std::swap(shortaverage_, other->shortaverage_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProfilingShortItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProfilingShortItem_descriptor_;
  metadata.reflection = ProfilingShortItem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProfilingShortEvent::kNameFieldNumber;
const int ProfilingShortEvent::kItemsFieldNumber;
#endif  // !_MSC_VER

ProfilingShortEvent::ProfilingShortEvent()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Proto.ProfilingShortEvent)
}

void ProfilingShortEvent::InitAsDefaultInstance() {
}

ProfilingShortEvent::ProfilingShortEvent(const ProfilingShortEvent& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Proto.ProfilingShortEvent)
}

void ProfilingShortEvent::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProfilingShortEvent::~ProfilingShortEvent() {
  // @@protoc_insertion_point(destructor:Proto.ProfilingShortEvent)
  SharedDtor();
}

void ProfilingShortEvent::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void ProfilingShortEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProfilingShortEvent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProfilingShortEvent_descriptor_;
}

const ProfilingShortEvent& ProfilingShortEvent::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProfilingEvent_2eproto();
  return *default_instance_;
}

ProfilingShortEvent* ProfilingShortEvent::default_instance_ = NULL;

ProfilingShortEvent* ProfilingShortEvent::New() const {
  return new ProfilingShortEvent;
}

void ProfilingShortEvent::Clear() {
  if (has_name()) {
    if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      name_->clear();
    }
  }
  items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProfilingShortEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Proto.ProfilingShortEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_items;
        break;
      }

      // repeated .Proto.ProfilingShortItem items = 2;
      case 2: {
        if (tag == 18) {
         parse_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_items;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Proto.ProfilingShortEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Proto.ProfilingShortEvent)
  return false;
#undef DO_
}

void ProfilingShortEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Proto.ProfilingShortEvent)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .Proto.ProfilingShortItem items = 2;
  for (int i = 0; i < this->items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->items(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Proto.ProfilingShortEvent)
}

::google::protobuf::uint8* ProfilingShortEvent::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Proto.ProfilingShortEvent)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .Proto.ProfilingShortItem items = 2;
  for (int i = 0; i < this->items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->items(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Proto.ProfilingShortEvent)
  return target;
}

int ProfilingShortEvent::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  // repeated .Proto.ProfilingShortItem items = 2;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProfilingShortEvent::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProfilingShortEvent* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProfilingShortEvent*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProfilingShortEvent::MergeFrom(const ProfilingShortEvent& from) {
  GOOGLE_CHECK_NE(&from, this);
  items_.MergeFrom(from.items_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProfilingShortEvent::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProfilingShortEvent::CopyFrom(const ProfilingShortEvent& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProfilingShortEvent::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->items())) return false;
  return true;
}

void ProfilingShortEvent::Swap(ProfilingShortEvent* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    items_.Swap(&other->items_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProfilingShortEvent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProfilingShortEvent_descriptor_;
  metadata.reflection = ProfilingShortEvent_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Proto

// @@protoc_insertion_point(global_scope)
